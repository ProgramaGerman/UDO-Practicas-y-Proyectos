name: Rosa Frontend CI/CD Pipeline

on:
  push:
    branches: [ main, Rosa-Frontend, Rosa-GestionClases-Frontend ]
    paths:
      - 'GestionClases-Frontend/**'
  pull_request:
    branches: [ main, Rosa-Frontend, Rosa-GestionClases-Frontend ]
    paths:
      - 'Rosa-GestionClases-Frontend/**'

jobs:
  frontend-ci-cd:
    runs-on: windows-latest
    
    defaults:
      run:
        working-directory: ./Rosa-GestionClases-Frontend
        shell: pwsh

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: Rosa-GestionClases-Frontend/package-lock.json

    - name: Install dependencies
      run: |
        try {
          npm ci --legacy-peer-deps
        } catch {
          Write-Host "npm ci failed, trying npm install..."
          npm install --legacy-peer-deps
        }

    - name: Run ESLint
      run: |
        try {
          npm run lint
        } catch {
          Write-Host "‚ö†Ô∏è ESLint issues found"
        }
      continue-on-error: true

    - name: Build application
      run: |
        npm run build
      env:
        NODE_OPTIONS: --max-old-space-size=4096

    - name: Run tests
      run: |
        npm test -- --watch=false --browsers=ChromeHeadless --code-coverage
      continue-on-error: true
      env:
        CHROME_BIN: ${{ github.workspace }}/chrome-win/chrome.exe

    - name: Upload test coverage
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report-windows
        path: Rosa-GestionClases-Frontend/coverage/
        retention-days: 7

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: build-artifacts-windows
        path: Rosa-GestionClases-Frontend/dist/
        retention-days: 7

    - name: Security audit
      run: |
        try {
          npm audit --audit-level=moderate
        } catch {
          Write-Host "‚ö†Ô∏è Security vulnerabilities found"
        }
      continue-on-error: true

    - name: CI Summary
      if: always()
      run: |
        Write-Host "üîç CI Pipeline completed for Rosa Frontend (Windows)"
        Write-Host "Branch: ${{ github.ref_name }}"
        Write-Host "Commit: ${{ github.sha }}"
        Write-Host "OS: Windows Server 2022"
        Write-Host "Shell: PowerShell"
        Write-Host "‚úÖ Dependencies installed"
        Write-Host "‚úÖ ESLint executed"
        Write-Host "‚úÖ Build completed"
        Write-Host "‚úÖ Tests executed"
        Write-Host "‚úÖ Security audit completed"

  # Deploy to Firebase
  # Firebase deployment is handled by firebase-hosting-merge.yml
